@startuml
skin rose
!pragma useIntermediatePackages false

package Models {
    class Arriendo{
        -patenteDeVehiculo: String
        -rutCliente: String
        -fechaDeInicio: String
        -fechaDeTermino: String
        +Arriendo( fechaDeInicio: String, fechaDeTermino: String, fechaDeInicio: String, fechaDeTermino: String)
        +getPatenteDeVehiculo(): String
        +getRutCliente(): String
        +getFechaDeInicio(): String
        +getFechaDeTermino():String
    }

    class ListaArriendo{
        -cantidadDiasArrendado: String
        +ListaCliente(cantidadDiasArrendado: String)
        +agregar(arriendo: Arriendo): boolean

    }

    class Cliente {
        -rut: String
        -nombre: String
        -apellido: String
        -fechaDeNacimiento: String
        -tipoDeLicencia: String

    }

    class ListaCliente{
        -nombreCliente: String
        -rut: String
        -tipoDeLicencia: String
        +ListaCliente(nombreCliente: String, rut: String, tipoDeLicencia: String)
        +inscribir(cliente: Cliente):boolean
        +buscar(rut: String): Cliente
        +buscar(nombre: String): Cliente
        +buscar(apellido: String): Cliente
        +buscar(fechaDeNacimiento String): Cliente
        +buscar(tipoDeLicencia): String
    }

    class Vehiculo{
        -patente: String
        -numeroDeRuedas: int
        -tipoDeVehiculo: String
        -numeroDeAsientos: int
        -estado: String
        +Vehiculo(patente: String, numeroDeRuedas: int, tipoDeVehiculo: String, numeroDeAsientos: int, estado: String)
        +getPatente(): String
        +getNumeroDeRuedas(): int
        +getTipoDeVehiculo(): String
        +getNumeroDeAsientos(): int
        +getEstado(): String
    }

    class ListaVehiculo{
        -patente: String
        +ListaVehiculo(patente: String)
        +inscribir(vehiculo: Vehiculo): boolean
        +buscar(patente: String): Vehiculo
        +buscar(numeroDeRuedas: int): Vehiculo
        +buscar(tipoDeVehiculo; String): Vehiculo
        +buscar(numeroDeAsientos: int): Vehiculo
        +buscar(estado: String): Vehiculo
    }
}

package Services {
    interface Sistema{
        +cargarArchivoCliente(nombreArchivo: String): boolean
        +inscribirCliente(rut: String, nombre: String, apellido: String, fechaDeNacimiento: String): boolean
        +cargarArchivoVehiculo(nombreArchivo: String): boolean
        +inscribirVehiculo(patente: String, numeroDeRuedas: int, numeroDeAsientos: int, tipoDeVehiculo: String, estado: String): boolean
        +cargarArchivoArriendo(nombreArchivo: String): boolean
        +registrarArriendo(patenteDeVehiculo: String, rutCliente: String, cantidadDiasArrendado: int): boolean
        +devolucionDeVehiculo(rutCliente: String): String[]
        +desplegarEstadisticas(): String[]
        +guardarArchivos(): void
    }

    class SistemaImpl{
        +SistemaImpl(cantidadDiasArrendado: int, patenteDeVehiculo: String, rutCliente: String)

    }
}



Sistema <|.. SistemaImpl
SistemaImpl *--> ListaArriendo: -listaArriendo: Arriendo[]
SistemaImpl *--> ListaCliente: -listaCliente: Cliente[]
SistemaImpl *--> ListaVehiculo: -listaVehiculo: Vehiculo[]

ListaArriendo o--> Arriendo: -listaArriendo: Arriendo[]
ListaCliente o--> "0..*"Cliente: -listaCliente: Cliente[]
ListaVehiculo o--> Vehiculo: -listaVehiculo: Vehiculo[]
Arriendo *--> ListaCliente: -listaCliente: Cliente
Arriendo *--> ListaVehiculo: -listaVehiculo: Vehiculo

@enduml